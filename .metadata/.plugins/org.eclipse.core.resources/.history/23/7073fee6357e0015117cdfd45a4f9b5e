public class Client
{
	private static String key = "";
	
	public static String username = "";
	public static String ip = "localhost";
	public static int port = 9001;
	
	public static void run() throws Exception
	{
		IO out = Start.out;
		if (Start.checkKey())
		{
			if (Start.prompts)
			{
				String shouldRetrieveKey = "";
				if (!Start.debug)
				{
					shouldRetrieveKey = out.nextLine("I noticed that you had a key stored. Would you like for me to retrieve it?");
				}
				else
				{
					shouldRetrieveKey = "yes";
				}
				if (shouldRetrieveKey.equalsIgnoreCase("yes"))
				{
					key = getKey();
					if (key.equals("illegal"))
					{
						out.println("You do not have access permissions to the stored key.");
						key = "";
						String inputKey = out.nextLine("Please enter the key the other person has given to you or you have generated");
						while (inputKey.length() != 64)
						{
							out.nextLine("Your key is invalid. Please enter it again");
						}
						key = inputKey;
					}
				}
				else
				{
					String inputKey = out.nextLine("Okay. Then please enter the key the other person has given you.");
					while (inputKey.length() != 64)
					{
						inputKey = out.nextLine("Your key is invalid. Please enter it again");
					}
					key = inputKey;
				}
			}
			if (Start.prompts)
			{
				out.println("You've given me the following key:");
				out.println(key);
				String correctKey = "";
				if (!Start.debug)
				{
					correctKey = out.nextLine("Does that look correct?");
				}
				else
				{
					correctKey = "yes";
				}
				if (!correctKey.equalsIgnoreCase("yes"))
				{
					String inputKey = out.nextLine("Okay then. Please enter the key you generated or were given.");
					while (inputKey.length() != 64)
					{
						inputKey = out.nextLine("Your key is invalid. Please enter it again");
					}
					key = inputKey;
				}
			}
			Start.initKey();
			if (!Start.localHost)
			{
				String ip = out.nextLine("What is the IP of the server?");
				setIp(ip);
			}
			out.println("Connecting to server...");
			username = out.forceInput("Please enter a username");
			ChatClient.init();
			while (true)
			{
				//String plaintext = out.nextLine();
				// String output = AES.encrypt(plaintext);
			}
		}
	}
	
	public static String getKey()
	{
		return key;
	}
	
	public static void setIp(String uIp)
	{
		try
		{
			if (!Start.localHost)
			{
				if (uIp.contains(":"))
				{
					ip = uIp.substring(0, uIp.indexOf(":"));
					port = Integer.parseInt(uIp.substring(uIp.indexOf(":") + 1));
					if (Start.debug)
					{
						Start.out.println("IP: " + ip + "\nPort: " + port);
					}
				}
				else
				{
					ip = uIp;
				}
			}
		}
		catch (Exception e)
		{
			Start.out.println("Incorrect IP");
		}
	}
}
